
user  nginx;
worker_processes  4;

error_log  /var/log/nginx/global_error.log notice;
#error_log /dev/null crit;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    rewrite_log on;
    access_log  /var/log/nginx/access.log  main;
    error_log  /var/log/nginx/error.log notice;
    #access_log off;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    #gizp压缩起点，文件大于1k才进行压缩
    gzip_min_length 1k;

    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间
    gzip_comp_level 6;

    # 进行压缩的文件类型。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/json;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";

    #include /etc/nginx/conf.d/*.conf;
    server {
        listen       80;
        server_name  localhost;
        client_max_body_size 30m;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        # 安全控制，避免别人知道这个目录是存在的
        #location /static/ {
        #    return   404;
        #}

        # 普通http api接口处理
     
     
        # 本地网页等静态文件的处理
        location / {
             root   /usr/share/nginx/html;
              index  index.html index.htm;
              add_header Cache-Control no-store;
            # 其作用是按顺序检查文件是否存在，返回第一个找到的文件或文件夹（结尾加斜线表示为文件夹），如果所有的文件或文件夹都找不到，会进行一个内部重定向到最后一个参数。
            try_files $uri /index.html;
        }

        # location  /api/ {
        #     proxy_pass  http://recruit-node:3000;
        # }
        # location  /MP_verify_8rt8j6mgt5j79CZA.txt {
        #     proxy_pass  http://recruit-node:3000/MP_verify_8rt8j6mgt5j79CZA.txt;
        # }
      

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

    }
}
